---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all content from all collections
const workoutLogs = await getCollection('workout-logs');
const benchmarks = await getCollection('benchmarks');
const plans = await getCollection('plans');
const sharedWorkouts = await getCollection('shared-workouts');
const templates = await getCollection('templates');

// Combine all content and sort by date (if available) or by title
const allContent = [
	...workoutLogs.map(item => ({ ...item, collection: 'workout-logs', type: 'Workout Log' })),
	...benchmarks.map(item => ({ ...item, collection: 'benchmarks', type: 'Benchmark' })),
	...plans.map(item => ({ ...item, collection: 'plans', type: 'Plan' })),
	...sharedWorkouts.map(item => ({ ...item, collection: 'shared-workouts', type: 'Shared Workout' })),
	...templates.map(item => ({ ...item, collection: 'templates', type: 'Template' })),
].sort((a: any, b: any) => {
	// First try to get dates from frontmatter
	let dateA = a.data.date;
	let dateB = b.data.date;
	
	// If no frontmatter date, try to extract from filename (YYYY-MM-DD format)
	if (!dateA && a.id) {
		const dateMatch = a.id.match(/^(\d{4}-\d{2}-\d{2})/);
		if (dateMatch) {
			dateA = new Date(dateMatch[1]);
		}
	}
	
	if (!dateB && b.id) {
		const dateMatch = b.id.match(/^(\d{4}-\d{2}-\d{2})/);
		if (dateMatch) {
			dateB = new Date(dateMatch[1]);
		}
	}
	
	// Sort by date if available (most recent first), otherwise by title
	if (dateA && dateB) {
		return new Date(dateB).getTime() - new Date(dateA).getTime();
	}
	
	// If only one has a date, prioritize it
	if (dateA && !dateB) return -1;
	if (!dateA && dateB) return 1;
	
	// Fallback to alphabetical sorting
	return a.data.title?.localeCompare(b.data.title || '') || a.id.localeCompare(b.id);
});

// Group content by collection for the category view
const contentByCollection = {
	'workout-logs': workoutLogs,
	'benchmarks': benchmarks,
	'plans': plans,
	'shared-workouts': sharedWorkouts,
	'templates': templates,
};

// Category metadata for better display
const categoryInfo = {
	'workout-logs': {
		title: 'Workout Logs',
		description: 'Detailed records of completed workouts',
		icon: 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z',
		gradient: 'from-green-500 to-emerald-600'
	},
	'benchmarks': {
		title: 'Benchmarks',
		description: 'Performance standards and goals',
		icon: 'M13 7h8m0 0v8m0-8l-8 8-4-4-6 6',
		gradient: 'from-blue-500 to-cyan-600'
	},
	'plans': {
		title: 'Plans',
		description: 'Structured training programs',
		icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2',
		gradient: 'from-purple-500 to-indigo-600'
	},
	'shared-workouts': {
		title: 'Shared Workouts',
		description: 'Partner and group exercises',
		icon: 'M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z',
		gradient: 'from-orange-500 to-red-600'
	},
	'templates': {
		title: 'Templates',
		description: 'Reusable workout formats',
		icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
		gradient: 'from-pink-500 to-rose-600'
	}
};
---

<Layout title="Copilot Workouts - Fitness Blog">
	<div class="space-y-16 fade-in">
		<!-- Hero Section -->
		<section class="relative text-center py-16 px-4">
			<!-- Background decoration -->
			<div class="absolute inset-0 -z-10">
				<div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-blue-400/20 to-purple-400/20 rounded-full blur-3xl"></div>
			</div>
			
			<div class="max-w-4xl mx-auto">
				<h1 class="text-5xl md:text-7xl font-bold mb-6 leading-tight">
					Copilot Workouts
				</h1>
				<p class="text-xl md:text-2xl text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto leading-relaxed">
					Track your fitness journey with workout logs, benchmarks, training plans, and more. 
					<span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent font-semibold">Power your progress.</span>
				</p>
				
				<!-- CTA Buttons -->
				<div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
					<a 
						href="/workout-logs" 
						class="btn btn-primary group"
					>
						<svg class="w-5 h-5 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
						</svg>
						Start Tracking
					</a>
					<a 
						href="/plans" 
						class="btn btn-secondary group"
					>
						<svg class="w-5 h-5 transition-transform group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
						</svg>
						View Plans
					</a>
				</div>
			</div>
		</section>

		<!-- Stats Section -->
		<section class="slide-up">
			<div class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
				{Object.entries(contentByCollection).map(([collection, items]) => (
					<div class="text-center">
						<div class="text-3xl md:text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
							{items.length}
						</div>
						<div class="text-sm md:text-base text-gray-600 dark:text-gray-300 capitalize">
							{collection.replace('-', ' ')}
						</div>
					</div>
				))}
			</div>
		</section>

		<!-- Categories Overview -->
		<section class="slide-up">
			<div class="text-center mb-12">
				<h2 class="text-4xl font-bold mb-4">Browse by Category</h2>
				<p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
					Explore different types of fitness content organized for easy discovery
				</p>
			</div>
			
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 stagger-animation">
				{Object.entries(contentByCollection).map(([collection, items]) => {
					const info = categoryInfo[collection as keyof typeof categoryInfo];
					return (
						<a 
							href={`/${collection}`}
							class="group card p-6 hover:card-glow"
						>
							<div class={`w-12 h-12 rounded-xl bg-gradient-to-br ${info.gradient} flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300`}>
								<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={info.icon} />
								</svg>
							</div>
							
							<h3 class="text-xl font-semibold mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
								{info.title}
							</h3>
							<p class="text-gray-600 dark:text-gray-300 mb-4 text-sm">
								{info.description}
							</p>
							<div class="flex items-center justify-between">
								<span class="badge">
									{items.length} {items.length === 1 ? 'item' : 'items'}
								</span>
								<span class="text-blue-600 dark:text-blue-400 font-medium group-hover:translate-x-1 transition-transform duration-200">
									View all â†’
								</span>
							</div>
						</a>
					);
				})}
			</div>
		</section>

		<!-- Recent Content -->
		<section class="slide-up">
			<div class="text-center mb-12">
				<h2 class="text-4xl font-bold mb-4">Recent Activity</h2>
				<p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
					Latest workouts, plans, and updates from your fitness journey
				</p>
			</div>
			
			<div class="space-y-6 stagger-animation">
				{allContent.slice(0, 8).map((item, index) => {
					const info = categoryInfo[item.collection as keyof typeof categoryInfo];
					return (
						<article class="card p-6 group">
							<div class="flex items-start gap-4">
								<!-- Category Icon -->
								<div class={`flex-shrink-0 w-10 h-10 rounded-lg bg-gradient-to-br ${info.gradient} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>
									<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={info.icon} />
									</svg>
								</div>
								
								<!-- Content -->
								<div class="flex-1 min-w-0">
									<div class="flex items-start justify-between gap-4">
										<div class="flex-1">
											<h3 class="text-xl font-semibold mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
												<a 
													href={`/${item.collection}/${item.id}`}
													class="hover:underline"
												>
													{item.data.title || item.id.replace(/-/g, ' ')}
												</a>
											</h3>
											
											<div class="flex items-center gap-3 mb-3 text-sm text-gray-500 dark:text-gray-400">
												<span class="badge badge-accent">
													{item.type}
												</span>
												{item.data.date && (
													<time datetime={item.data.date.toISOString()} class="flex items-center gap-1">
														<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
															<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
														</svg>
														{item.data.date.toLocaleDateString('en-US', { 
															year: 'numeric', 
															month: 'short', 
															day: 'numeric' 
														})}
													</time>
												)}
											</div>
											
											{item.body && (
												<p class="text-gray-600 dark:text-gray-300 line-clamp-2 text-sm leading-relaxed">
													{item.body.slice(0, 150)}...
												</p>
											)}
										</div>
										
										<!-- Arrow -->
										<div class="flex-shrink-0 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-200">
											<svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
											</svg>
										</div>
									</div>
								</div>
							</div>
						</article>
					);
				})}
			</div>
			
			{allContent.length > 8 && (
				<div class="text-center mt-12">
					<a href="/workout-logs" class="btn btn-secondary">
						View All Content
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
						</svg>
					</a>
				</div>
			)}
		</section>
	</div>
</Layout>
